name: CI/CD Bookstore

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: bookstore
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}  # Verwendung von geheimem DB Passwort
        options: >-
          --health-cmd="pg_isready -U postgres" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5

    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v3

    - name: 🧪 Setup Java 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: 🛠️ Build & Test Spring Boot Backend
      working-directory: ./backend
      run: |
        ./mvnw clean test
        ./mvnw jacoco:report

    - name: 📦 Upload Backend Coverage Report
      uses: actions/upload-artifact@v3
      with:
        name: backend-coverage
        path: backend/target/site/jacoco/index.html

    - name: 🧪 Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: 🛠️ Build Angular Frontend
      working-directory: ./frontend
      run: |
        npm install
        npm run build -- --configuration production

    - name: 🧪 Run Angular Tests with Coverage
      working-directory: ./frontend
      run: |
        npm run test -- --watch=false --code-coverage

    - name: 📦 Upload Frontend Coverage Report
      uses: actions/upload-artifact@v3
      with:
        name: frontend-coverage
        path: frontend/coverage

  docker-build-and-deploy:
    runs-on: ubuntu-latest
    needs: build  # Wartet auf den Build-Job

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v3

      - name: 🧪 Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 🛠️ Build Docker Image for Backend
        run: |
          docker build -t okteto.dev/bookstore-backend:latest -f backend/Dockerfile .

      - name: 📦 Push Docker Image to Okteto Registry
        run: |
          docker push okteto.dev/bookstore-backend:latest

      - name: 🚀 Deploy to Okteto
        uses: okteto/deploy-stack@latest
        with:
          name: bookstore
          namespace: ${{ secrets.OKTETO_NAMESPACE }}  # Okteto Namespace secret
          token: ${{ secrets.OKTETO_TOKEN }}  # Okteto API token secret

